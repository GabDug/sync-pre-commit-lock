[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[project]
name = "sync-pre-commit-lock"
version = "0.1.0"
description = "PDM plugin to sync your pre-commit versions with your lockfile."
authors = [
    {name = "Gabriel Dugny", email = "sync-pre-commit-lock@dugny.me"},
]
dependencies = [
    "pdm>=2.7.4",
    "PyYAML>=6.0",
]
requires-python = ">=3.11"
readme = "README.md"
license = {text = "MIT"}
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Typing :: Typed",
]
[project.urls]
"Homepage" = "https://github.com/GabDug/sync-pre-commit-lock"
"Changelog" = "https://github.com/GabDug/sync-pre-commit-lock/blob/main/CHANGELOG.md"
"Bug Tracker" = "https://github.com/GabDug/sync-pre-commit-lock/issues"


[project.entry-points.pdm]
pdm-sync-pre-commit = "sync_pre_commit_lock:register_pdm_plugin"

[tool.pdm.dev-dependencies]
dev = [
    "black>=23.3.0",
    "autopep8>=2.0.2",
    "mypy>=1.4.1",
    "ruff>=0.0.275",
    "types-PyYAML>=6.0.12.10",
    "pytest>=7.4.0",
    "pytest-mock>=3.11.1",
    "pytest-cov>=4.1.0",
]
# [tool.pdm]
# plugins = [
#     "-e file:///${PROJECT_ROOT}"
# ]


[tool.sync-pre-commit-lock]
disable-sync-from-lock = false
ignore = []
pre-commit-config-file = ".pre-commit-config.yaml"
[tool.sync-pre-commit-lock.dependency-mapping]
a = {rev = "1.0.0", repo = "a"}
# Additionnal mappins in TOML
# Additional mapping files to load
# Way to override the default mapping?
# Add comment to specify that version is managed by sync-pre-commit-lock
# Support --allow-frozen


[tool.ruff]
line-length = 140
respect-gitignore = true
extend-select = ["Q000", "TCH", "I001"]
target-version = "py311"

[tool.mypy]
strict = true

[tool.black]
line-length = 120
target-version = ["py311"]



[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
norecursedirs = "*.egg .eggs dist build docs .tox .git __pycache__ node_modules .venv __pypackages__"

addopts = """
--strict-markers
--strict-config
--doctest-modules
--tb=short
"""
[tool.coverage.run]
branch = true

[tool.coverage.report]
fail_under = 90.0
# skip_covered=true
# skip_empty=true

exclude_lines = [
  "def __repr__",
  "if TYPE_CHECKING:",
  "if settings.DEBUG",
  "raise AssertionError",
  "raise NotImplementedError",
  "if __name__ == .__main__.:",
  'class .*\bProtocol\):',
  '@(abc\.)?abstractmethod]',
]
